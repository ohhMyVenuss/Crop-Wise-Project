import Button from '../shared/Button';

const DiagnosisResult = ({ imageUrl, result, onFindSuppliers, onReportToCommunity }) => {
  // Mock data cho k·∫øt qu·∫£ ch·∫©n ƒëo√°n
  const mockResult = {
    diseaseName: 'B·ªánh ƒê·ªëm L√° L·ªõn',
    confidence: 97,
    description: 'B·ªánh do n·∫•m Helminthosporium turcicum g√¢y ra, th∆∞·ªùng xu·∫•t hi·ªán v√†o cu·ªëi v·ª• khi ƒë·ªô ·∫©m cao.',
    symptoms: [
      'C√°c ƒë·ªëm h√¨nh thoi m√†u n√¢u tr√™n l√°',
      'ƒê·ªëm lan r·ªông v√† li√™n k·∫øt v·ªõi nhau',
      'L√° chuy·ªÉn m√†u v√†ng v√† kh√¥ h√©o',
      'Gi·∫£m nƒÉng su·∫•t nghi√™m tr·ªçng'
    ],
    recommendations: {
      biological: [
        'S·ª≠ d·ª•ng ch·∫ø ph·∫©m sinh h·ªçc Trichoderma',
        'TƒÉng c∆∞·ªùng b√≥n ph√¢n h·ªØu c∆°',
        'Lu√¢n canh c√¢y tr·ªìng'
      ],
      chemical: [
        'Phun thu·ªëc tr·ª´ n·∫•m Propiconazole 25EC',
        'S·ª≠ d·ª•ng Mancozeb 80WP',
        'K·∫øt h·ª£p v·ªõi thu·ªëc g·ªëc ƒë·ªìng'
      ]
    },
    severity: 'Cao',
    affectedArea: '15-20% di·ªán t√≠ch l√°'
  };

  const actualResult = result || mockResult;

  const getSeverityColor = (severity) => {
    switch (severity) {
      case 'Cao': return 'text-red-600 bg-red-100';
      case 'Trung b√¨nh': return 'text-yellow-600 bg-yellow-100';
      case 'Th·∫•p': return 'text-green-600 bg-green-100';
      default: return 'text-gray-600 bg-gray-100';
    }
  };

  return (
    <div className="space-y-6">
      {/* Header v·ªõi ·∫£nh v√† k·∫øt qu·∫£ ch√≠nh */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <div className="flex flex-col lg:flex-row gap-6">
          {/* ·∫¢nh */}
          <div className="flex-shrink-0">
            <img 
              src={imageUrl} 
              alt="·∫¢nh ch·∫©n ƒëo√°n" 
              className="w-full max-w-sm h-64 object-cover rounded-lg shadow-sm"
            />
          </div>
          
          {/* K·∫øt qu·∫£ ch√≠nh */}
          <div className="flex-1">
            <div className="flex items-center justify-between mb-4">
              <h2 className="text-2xl font-bold text-gray-900">
                {actualResult.diseaseName}
              </h2>
              <span className={`px-3 py-1 rounded-full text-sm font-medium ${getSeverityColor(actualResult.severity)}`}>
                {actualResult.severity}
              </span>
            </div>
            
            <div className="space-y-4">
              <div>
                <div className="flex items-center space-x-2 mb-2">
                  <span className="text-sm font-medium text-gray-600">ƒê·ªô ch√≠nh x√°c:</span>
                  <span className="text-lg font-bold text-green-600">{actualResult.confidence}%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div 
                    className="bg-green-600 h-2 rounded-full transition-all duration-500"
                    style={{ width: `${actualResult.confidence}%` }}
                  ></div>
                </div>
              </div>
              
              <p className="text-gray-700 leading-relaxed">
                {actualResult.description}
              </p>
              
              <div className="flex items-center space-x-4 text-sm text-gray-600">
                <span>Di·ªán t√≠ch b·ªã ·∫£nh h∆∞·ªüng: <strong>{actualResult.affectedArea}</strong></span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Tri·ªáu ch·ª©ng */}
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
          <span className="w-6 h-6 bg-red-100 rounded-full flex items-center justify-center mr-2">
            üîç
          </span>
          Tri·ªáu ch·ª©ng quan s√°t
        </h3>
        <ul className="space-y-2">
          {actualResult.symptoms.map((symptom, index) => (
            <li key={index} className="flex items-start space-x-2">
              <span className="w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0"></span>
              <span className="text-gray-700">{symptom}</span>
            </li>
          ))}
        </ul>
      </div>

      {/* Khuy·∫øn ngh·ªã */}
      <div className="grid md:grid-cols-2 gap-6">
        {/* Bi·ªán ph√°p sinh h·ªçc */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
            <span className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mr-2">
              üå±
            </span>
            Bi·ªán ph√°p sinh h·ªçc
          </h3>
          <ul className="space-y-2">
            {actualResult.recommendations.biological.map((item, index) => (
              <li key={index} className="flex items-start space-x-2">
                <span className="w-2 h-2 bg-green-400 rounded-full mt-2 flex-shrink-0"></span>
                <span className="text-gray-700">{item}</span>
              </li>
            ))}
          </ul>
        </div>

        {/* Bi·ªán ph√°p h√≥a h·ªçc */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
            <span className="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center mr-2">
              üß™
            </span>
            Bi·ªán ph√°p h√≥a h·ªçc
          </h3>
          <ul className="space-y-2">
            {actualResult.recommendations.chemical.map((item, index) => (
              <li key={index} className="flex items-start space-x-2">
                <span className="w-2 h-2 bg-blue-400 rounded-full mt-2 flex-shrink-0"></span>
                <span className="text-gray-700">{item}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>

      {/* Action buttons */}
      <div className="flex flex-col sm:flex-row gap-4">
        <Button 
          variant="primary" 
          size="lg" 
          className="flex-1"
          onClick={onFindSuppliers}
        >
          <span className="mr-2">üè™</span>
          T√¨m c·ª≠a h√†ng v·∫≠t t∆∞
        </Button>
        <Button 
          variant="outline" 
          size="lg" 
          className="flex-1"
          onClick={onReportToCommunity}
        >
          <span className="mr-2">‚ö†Ô∏è</span>
          C·∫£nh b√°o cho c·ªông ƒë·ªìng
        </Button>
      </div>

      {/* Disclaimer */}
      <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
        <div className="flex items-start space-x-2">
          <span className="text-yellow-600 text-lg">‚ö†Ô∏è</span>
          <div>
            <h4 className="text-sm font-medium text-yellow-800 mb-1">L∆∞u √Ω quan tr·ªçng:</h4>
            <p className="text-xs text-yellow-700">
              K·∫øt qu·∫£ ch·∫©n ƒëo√°n n√†y ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o. ƒê·ªÉ c√≥ ch·∫©n ƒëo√°n ch√≠nh x√°c nh·∫•t, 
              vui l√≤ng li√™n h·ªá v·ªõi chuy√™n gia n√¥ng nghi·ªáp ho·∫∑c c∆° quan b·∫£o v·ªá th·ª±c v·∫≠t ƒë·ªãa ph∆∞∆°ng.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DiagnosisResult;
